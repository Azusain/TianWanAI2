# Base ultralytics microservices environment image
# CUDA 12.6.3 + cuDNN runtime with Python 3.11 and all dependencies
FROM nvidia/cuda:12.6.3-cudnn-runtime-ubuntu22.04

ENV WORKDIR=/root
ENV PATH="${WORKDIR}/venv/bin:$PATH"
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
WORKDIR ${WORKDIR}

# Install system dependencies with all Python standard library components
RUN ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime && \
    apt-get update && \
    apt-get install -y --no-install-recommends \
        python3.11 \
        python3.11-venv \
        python3.11-dev \
        python3.11-distutils \
        gcc \
        g++ \
        cmake \
        libgl1-mesa-glx \
        libglib2.0-0 \
        libgomp1 \
        && \
    python3.11 -m venv --system-site-packages venv && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Copy and install Python dependencies
COPY requirements.txt ./
RUN pip install torch torchvision --index-url https://download.pytorch.org/whl/cu126 && \
    pip install -r requirements.txt && \
    pip install requests gunicorn

# Create placeholder YOLO projects to pre-install dependencies
RUN mkdir -p YOLO-main-fire/yolox && \
    mkdir -p YOLO-main-helmet/yolox && \
    mkdir -p YOLO-main-safetybelt/yolox && \
    touch YOLO-main-fire/yolox/__init__.py && \
    touch YOLO-main-helmet/yolox/__init__.py && \
    touch YOLO-main-safetybelt/yolox/__init__.py

# Create minimal setup.py files to enable editable installation
RUN echo 'from setuptools import setup, find_packages' > YOLO-main-fire/setup.py && \
    echo 'setup(name="yolox-fire", packages=find_packages())' >> YOLO-main-fire/setup.py && \
    echo 'from setuptools import setup, find_packages' > YOLO-main-helmet/setup.py && \
    echo 'setup(name="yolox-helmet", packages=find_packages())' >> YOLO-main-helmet/setup.py && \
    echo 'from setuptools import setup, find_packages' > YOLO-main-safetybelt/setup.py && \
    echo 'setup(name="yolox-safetybelt", packages=find_packages())' >> YOLO-main-safetybelt/setup.py

# Pre-install YOLOX projects in editable mode
RUN cd YOLO-main-fire && pip install -e . && \
    cd ../YOLO-main-helmet && pip install -e . && \
    cd ../YOLO-main-safetybelt && pip install -e .

# Create symlink for python if needed
RUN ln -sf /usr/bin/python3.11 /usr/bin/python3 || true

# Create logs directory
RUN mkdir -p logs

# Expose all service ports
EXPOSE 8080 8901 8902 8903

# Default command - automatically activate venv and run the application
CMD ["bash", "-c", "source /root/venv/bin/activate && bash run.bash"]
